/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_TEST_PB_H_INCLUDED
#define PB_TEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SubMessage {
    pb_callback_t sub_field;
} SubMessage;

typedef struct _MyMessage {
    SubMessage (*sub_messages)[20];
} MyMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SubMessage_init_default                  {{{NULL}, NULL}}
#define MyMessage_init_default                   {NULL}
#define SubMessage_init_zero                     {{{NULL}, NULL}}
#define MyMessage_init_zero                      {NULL}

/* Field tags (for use in manual encoding/decoding) */
#define SubMessage_sub_field_tag                 1
#define MyMessage_sub_messages_tag               1

/* Struct field encoding specification for nanopb */
#define SubMessage_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   sub_field,         1)
#define SubMessage_CALLBACK pb_default_field_callback
#define SubMessage_DEFAULT NULL

#define MyMessage_FIELDLIST(X, a) \
X(a, POINTER,  FIXARRAY, MESSAGE,  sub_messages,      1)
#define MyMessage_CALLBACK NULL
#define MyMessage_DEFAULT NULL
#define MyMessage_sub_messages_MSGTYPE SubMessage

extern const pb_msgdesc_t SubMessage_msg;
extern const pb_msgdesc_t MyMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SubMessage_fields &SubMessage_msg
#define MyMessage_fields &MyMessage_msg

/* Maximum encoded size of messages (where known) */
/* SubMessage_size depends on runtime parameters */
/* MyMessage_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
