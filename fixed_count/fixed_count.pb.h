/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_FIXED_COUNT_PB_H_INCLUDED
#define PB_FIXED_COUNT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Message1 {
    int32_t data[3];
} Message1;

typedef struct _Message2 {
    Message1 data[2];
} Message2;

typedef struct _Message3 {
    Message2 data1[2];
    Message2 data2[2];
} Message3;

typedef struct _SubMessage {
    int32_t a;
} SubMessage;

typedef struct _Message4 {
    SubMessage (*submsgs)[5];
    char* (*strings)[4];
} Message4;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Message1_init_default                    {{0, 0, 0}}
#define Message2_init_default                    {{Message1_init_default, Message1_init_default}}
#define Message3_init_default                    {{Message2_init_default, Message2_init_default}, {Message2_init_default, Message2_init_default}}
#define SubMessage_init_default                  {0}
#define Message4_init_default                    {NULL, NULL}
#define Message1_init_zero                       {{0, 0, 0}}
#define Message2_init_zero                       {{Message1_init_zero, Message1_init_zero}}
#define Message3_init_zero                       {{Message2_init_zero, Message2_init_zero}, {Message2_init_zero, Message2_init_zero}}
#define SubMessage_init_zero                     {0}
#define Message4_init_zero                       {NULL, NULL}

/* Field tags (for use in manual encoding/decoding) */
#define Message1_data_tag                        1
#define Message2_data_tag                        1
#define Message3_data1_tag                       1
#define Message3_data2_tag                       2
#define SubMessage_a_tag                         1
#define Message4_submsgs_tag                     1
#define Message4_strings_tag                     2

/* Struct field encoding specification for nanopb */
#define Message1_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, INT32,    data,              1)
#define Message1_CALLBACK NULL
#define Message1_DEFAULT NULL

#define Message2_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, MESSAGE,  data,              1)
#define Message2_CALLBACK NULL
#define Message2_DEFAULT NULL
#define Message2_data_MSGTYPE Message1

#define Message3_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, MESSAGE,  data1,             1) \
X(a, STATIC,   FIXARRAY, MESSAGE,  data2,             2)
#define Message3_CALLBACK NULL
#define Message3_DEFAULT NULL
#define Message3_data1_MSGTYPE Message2
#define Message3_data2_MSGTYPE Message2

#define SubMessage_FIELDLIST(X, a_) \
X(a_, STATIC,   REQUIRED, INT32,    a,                 1)
#define SubMessage_CALLBACK NULL
#define SubMessage_DEFAULT NULL

#define Message4_FIELDLIST(X, a) \
X(a, POINTER,  FIXARRAY, MESSAGE,  submsgs,           1) \
X(a, POINTER,  FIXARRAY, STRING,   strings,           2)
#define Message4_CALLBACK NULL
#define Message4_DEFAULT NULL
#define Message4_submsgs_MSGTYPE SubMessage

extern const pb_msgdesc_t Message1_msg;
extern const pb_msgdesc_t Message2_msg;
extern const pb_msgdesc_t Message3_msg;
extern const pb_msgdesc_t SubMessage_msg;
extern const pb_msgdesc_t Message4_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Message1_fields &Message1_msg
#define Message2_fields &Message2_msg
#define Message3_fields &Message3_msg
#define SubMessage_fields &SubMessage_msg
#define Message4_fields &Message4_msg

/* Maximum encoded size of messages (where known) */
/* Message4_size depends on runtime parameters */
#define Message1_size                            33
#define Message2_size                            70
#define Message3_size                            288
#define SubMessage_size                          11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
